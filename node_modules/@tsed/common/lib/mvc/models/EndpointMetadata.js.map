{"version":3,"file":"EndpointMetadata.js","sourceRoot":"","sources":["../../../src/mvc/models/EndpointMetadata.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ancestorsOf,\n  deepExtends,\n  descriptorOf,\n  EntityOptions,\n  Enumerable,\n  isArrayOrArrayClass,\n  isFunction,\n  isPromise,\n  Metadata,\n  nameOf,\n  prototypeOf,\n  Storable,\n  Store,\n  Type\n} from \"@tsed/core\";\nimport {IPathMethod} from \"../interfaces/IPathMethod\";\nimport {IResponseOptions} from \"../interfaces/IResponseOptions\";\nimport {ParamMetadata} from \"./ParamMetadata\";\n\nexport interface EndpointConstructorOptions extends EntityOptions {\n  beforeMiddlewares?: Function[];\n  middlewares?: Function[];\n  afterMiddlewares?: Function[];\n  pathsMethods?: IPathMethod[];\n  type?: any;\n  responses?: Map<number, IResponseOptions>;\n  statusCode?: number;\n}\n\nexport interface EndpointViewOptions {\n  path: string;\n  options: any;\n}\n\nexport interface EndpointRedirectOptions {\n  status: number | undefined;\n  url: string;\n}\n\n/**\n * EndpointMetadata contains metadata about a controller and his method.\n * Each annotation (@Get, @Body...) attached to a method are stored in a endpoint.\n * EndpointMetadata convert this metadata to an array which contain arguments to call an Express method.\n *\n * Example :\n *\n *    @Controller(\"/my-path\")\n *    provide MyClass {\n *\n *        @Get(\"/\")\n *        @Authenticated()\n *        public myMethod(){}\n *    }\n *\n */\nexport class EndpointMetadata extends Storable implements EndpointConstructorOptions {\n  provide: Type<any>;\n  // LIFECYCLE\n  @Enumerable()\n  public beforeMiddlewares: any[] = [];\n\n  @Enumerable()\n  public middlewares: any[] = [];\n\n  @Enumerable()\n  public afterMiddlewares: any[] = [];\n  /**\n   * Route strategy.\n   */\n  @Enumerable()\n  public pathsMethods: IPathMethod[] = [];\n\n  @Enumerable()\n  readonly responses: Map<number, IResponseOptions> = new Map();\n\n  @Enumerable()\n  public statusCode: number = 200;\n\n  constructor(options: EndpointConstructorOptions) {\n    super(\n      options.target,\n      options.propertyKey!,\n      options.descriptor || Object.getOwnPropertyDescriptor(options.target, options.propertyKey!)\n    );\n\n    const {\n      target,\n      statusCode,\n      responses,\n      propertyKey,\n      beforeMiddlewares = [],\n      middlewares = [],\n      afterMiddlewares = [],\n      pathsMethods = [],\n      type\n    } = options;\n\n    this.provide = target;\n    this._type = Metadata.getReturnType(target, propertyKey);\n    this.after(afterMiddlewares);\n    this.before(beforeMiddlewares);\n    this.use(middlewares);\n\n    this.pathsMethods = pathsMethods;\n    this.type = type;\n    statusCode && (this.statusCode = statusCode);\n\n    if (responses) {\n      this.responses = responses;\n    } else {\n      this.responses.set(this.statusCode, {\n        code: this.statusCode\n      } as any);\n    }\n  }\n\n  get type(): Type<any> {\n    return isPromise(this._type) || isArrayOrArrayClass(this._type) || this._type === Object ? undefined! : this._type;\n  }\n\n  set type(type: Type<any>) {\n    this._type = type;\n  }\n\n  get targetName(): string {\n    return nameOf(this.provide);\n  }\n\n  get params() {\n    return ParamMetadata.getParams(this.target, this.propertyKey);\n  }\n\n  get response() {\n    return this.responses.get(this.statusCode)!;\n  }\n\n  get view(): EndpointViewOptions {\n    return this.store.get(\"view\") as EndpointViewOptions;\n  }\n\n  set view(view: EndpointViewOptions) {\n    this.store.set(\"view\", view);\n  }\n\n  get location(): string {\n    return this.store.get(\"location\") as string;\n  }\n\n  set location(url: string) {\n    this.store.set(\"location\", url);\n  }\n\n  get redirect(): EndpointRedirectOptions {\n    return this.store.get(\"redirect\") as any;\n  }\n\n  set redirect(options: EndpointRedirectOptions) {\n    this.store.set(\"redirect\", {\n      status: 302,\n      ...options\n    });\n  }\n\n  /**\n   * @deprecated Will be removed in v6\n   */\n  get contentType(): string {\n    return this.store.get(\"contentType\") as string;\n  }\n\n  /**\n   * @deprecated Will be removed in v6\n   */\n  set contentType(url: string) {\n    this.store.set(\"contentType\", url);\n  }\n\n  /**\n   * Get all endpoints from a given class and his parents.\n   * @param {Type<any>} target\n   * @returns {EndpointMetadata[]}\n   */\n  static getEndpoints(target: Type<any>): EndpointMetadata[] {\n    const map = new Map();\n\n    const set = (base: any) => {\n      const store = Store.from(base);\n\n      if (store.has(\"endpoints\")) {\n        store.get(\"endpoints\").forEach((endpoint: EndpointMetadata) => {\n          if (!map.has(endpoint.propertyKey)) {\n            endpoint = endpoint.clone();\n            endpoint.provide = target;\n\n            map.set(endpoint.propertyKey, endpoint);\n          }\n        });\n      }\n    };\n\n    ancestorsOf(target).reverse().forEach(set);\n\n    return Array.from(map.values());\n  }\n\n  /**\n   * Get an endpoint.\n   * @param target\n   * @param propertyKey\n   * @param descriptor\n   */\n  static get(target: Type<any>, propertyKey: string | symbol, descriptor?: PropertyDescriptor): EndpointMetadata {\n    descriptor = descriptor === undefined ? descriptorOf(prototypeOf(target), \"test\") : descriptor;\n    const store = Store.from(target);\n    const endpoints = store.get(\"endpoints\") || new Map();\n    store.set(\"endpoints\", endpoints);\n\n    if (!endpoints.has(propertyKey)) {\n      endpoints.set(propertyKey, new EndpointMetadata({target, propertyKey, descriptor}));\n    }\n\n    return store.get(\"endpoints\").get(propertyKey);\n  }\n\n  /**\n   * Gets a value indicating whether the target object or its prototype chain has already method registered.\n   * @param target\n   * @param method\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  static has(target: Type<any>, method: string | symbol): boolean {\n    return Store.from(target).get(\"endpoints\").has(method);\n  }\n\n  /**\n   * Append mvc in the pool (before).\n   * @param target\n   * @param targetKey\n   * @param args\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  static useBefore(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey, descriptorOf(target, targetKey)).before(args);\n\n    return this;\n  }\n\n  /**\n   * Add middleware and configuration for the endpoint.\n   * @param target\n   * @param targetKey\n   * @param args\n   * @returns {Endpoint}\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  static use(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey, descriptorOf(target, targetKey)).use(args);\n\n    return this;\n  }\n\n  /**\n   * Append mvc in the pool (after).\n   * @param target\n   * @param targetKey\n   * @param args\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  static useAfter(target: Type<any>, targetKey: string | symbol, args: any[]) {\n    this.get(target, targetKey, descriptorOf(target, targetKey)).after(args);\n\n    return this;\n  }\n\n  /**\n   * Find the a value at the controller level. Let this value be extended or overridden by the endpoint itself.\n   *\n   * @param key\n   * @returns {any}\n   */\n  get<T = any>(key: any): T {\n    const ctrlValue = Store.from(this.target).get(key);\n    let meta = deepExtends(undefined, ctrlValue);\n    const endpointValue = this.store.get(key);\n    if (endpointValue !== undefined) {\n      meta = deepExtends(meta, endpointValue);\n    }\n\n    return meta;\n  }\n\n  /**\n   * Change the type and the collection type from the status code.\n   * @param {string | number} code\n   * @deprecated Use endpoint.responses.get(code)\n   */\n  public statusResponse(code: string | number) {\n    if (code && this.responses.has(+code)) {\n      const {type, collectionType} = this.responses.get(+code)!;\n      this.type = type;\n      this.collectionType = collectionType;\n    } else {\n      const {type, collectionType} = this.responses.get(this.statusCode) || {};\n      this.type = type;\n      this.collectionType = collectionType;\n    }\n\n    return this.responses.get(+code) || {};\n  }\n\n  /**\n   *\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public before(args: Function[]): this {\n    this.beforeMiddlewares = this.beforeMiddlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  /**\n   *\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public after(args: Function[]): this {\n    this.afterMiddlewares = this.afterMiddlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  /**\n   * Store all arguments collected via Annotation.\n   * @param args\n   */\n  public use(args: Function[]) {\n    this.middlewares = this.middlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  /**\n   * Store all arguments collected via Annotation.\n   * @param args\n   * @deprecated\n   */\n\n  /* istanbul ignore next */\n  public merge(args: any[]): this {\n    return this.use(args);\n  }\n\n  public clone() {\n    return new EndpointMetadata({\n      target: this.target,\n      propertyKey: this.propertyKey,\n      descriptor: this.descriptor,\n      beforeMiddlewares: this.beforeMiddlewares,\n      middlewares: this.middlewares,\n      afterMiddlewares: this.afterMiddlewares,\n      pathsMethods: this.pathsMethods,\n      type: this.type,\n      responses: this.responses,\n      statusCode: this.statusCode\n    });\n  }\n}\n"]}