{"version":3,"file":"PlatformExpressResponse.js","sourceRoot":"","sources":["../../../src/platform-express/services/PlatformExpressResponse.ts"],"names":[],"mappings":";;;;AAAA,iCAA0C;AAC1C,+EAA0E;AAE1E;;;GAGG;AAEH,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,mCAAgB;IAC3D;;;;OAIG;IACH,KAAK,CAAC,MAAM,CAAC,IAAY,EAAE,UAAe,EAAE;QAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,GAAQ,EAAE,IAAI,EAAE,EAAE;gBAChD,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAbY,uBAAuB;IADnC,qBAAgB,CAAC,mCAAgB,CAAC;GACtB,uBAAuB,CAanC;AAbY,0DAAuB","sourcesContent":["import {OverrideProvider} from \"@tsed/di\";\nimport {PlatformResponse} from \"../../platform/services/PlatformResponse\";\n\n/**\n * @platform\n * @express\n */\n@OverrideProvider(PlatformResponse)\nexport class PlatformExpressResponse extends PlatformResponse {\n  /**\n   * Render a view from given data\n   * @param path\n   * @param options\n   */\n  async render(path: string, options: any = {}): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.raw.render(path, options, (err: any, html) => {\n        err ? reject(err) : resolve(html);\n      });\n    });\n  }\n}\n"]}