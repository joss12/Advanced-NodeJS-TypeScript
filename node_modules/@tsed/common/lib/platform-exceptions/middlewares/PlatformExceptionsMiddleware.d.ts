import { IMiddleware } from "../../mvc/interfaces/IMiddleware";
import { Context } from "../../platform/decorators/context";
import { GlobalErrorHandlerMiddleware } from "./GlobalErrorHandlerMiddleware";
/**
 * Catch all errors and return the json error with the right status code when it's possible.
 * @middleware
 * @platform
 */
export declare class PlatformExceptionsMiddleware implements IMiddleware {
    middleware: GlobalErrorHandlerMiddleware;
    types: Map<import("@tsed/core").Type<any> | Symbol, import("..").ExceptionFilterMethods<unknown>>;
    use(error: any, ctx: Context): any;
}
