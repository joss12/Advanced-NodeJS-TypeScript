"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.callHook = void 0;
const util = require("util");
const SKIP_HOOKS = ["$beforeInit", "$afterInit", "$onInit", "$onMountingMiddlewares"];
async function callHook(injector, rootModule, key, ...args) {
    injector.logger.info(`\x1B[1mCall hook ${key}\x1B[22m`);
    if (key in rootModule) {
        const hookDepreciation = (hook, newHook) => util.deprecate(() => { }, `${hook} hook is deprecated. ${newHook ? "Use " + newHook + " instead" : "Hook will be removed"}`)();
        if (key === "$onInit") {
            hookDepreciation("$onInit", "$beforeInit");
        }
        if (key === "$onMountingMiddlewares") {
            hookDepreciation("$onMountingMiddlewares", "$beforeRoutesInit");
        }
        // istanbul ignore next
        if (key === "$onServerInitError") {
            hookDepreciation("$onServerInitError");
        }
        await rootModule[key](...args);
    }
    if (!SKIP_HOOKS.includes(key)) {
        await injector.emit(key);
    }
}
exports.callHook = callHook;
//# sourceMappingURL=callHook.js.map