{"version":3,"file":"PlatformResponseMiddleware.js","sourceRoot":"","sources":["../../../src/platform/middlewares/PlatformResponseMiddleware.ts"],"names":[],"mappings":";;;;AAAA,qCAAmE;AACnE,iCAAgC;AAChC,iFAA4E;AAC5E,sEAAiE;AAEjE,8CAAyC;AACzC,mDAA8C;AAC9C,qEAAgE;AAEhE;;;;;;GAMG;AAEH,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAO9B,KAAK,CAAC,GAAG,CAAY,GAAY;QACtC,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAC,GAAG,GAAG,CAAC;QACjC,IAAI,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;QAEjB,IAAI,QAAQ,CAAC,IAAI,EAAE;YACjB,0BAA0B;YAC1B,IAAI,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;SACtE;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;YACrC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAC,CAAC,CAAC;SAC7F;QAED,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEpB,OAAO,aAAK,CAAC;IACf,CAAC;IAES,eAAe,CAAC,IAAS;QACjC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,SAAS,CAAC,CAAC;IACzF,CAAC;IAES,YAAY,CAAC,IAAS;QAC9B,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,gBAAS,CAAC,IAAI,CAAC,IAAI,eAAQ,CAAC,IAAI,CAAC,IAAI,eAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC;IACvG,CAAC;IAES,gBAAgB,CAAC,IAAS;QAClC,OAAO,eAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;CACF,CAAA;AAhCC;IADC,WAAM,EAAE;sCACD,mCAAgB;0DAAC;AAGzB;IADC,WAAM,EAAE;sCACS,+CAAsB;oEAAC;AAEzC;IAAkB,mBAAA,iBAAO,EAAE,CAAA;;;;qDAc1B;AArBU,0BAA0B;IADtC,uBAAU,EAAE;GACA,0BAA0B,CAkCtC;AAlCY,gEAA0B","sourcesContent":["import {isBoolean, isNumber, isStream, isString} from \"@tsed/core\";\nimport {Inject} from \"@tsed/di\";\nimport {ConverterService} from \"../../converters/services/ConverterService\";\nimport {Middleware} from \"../../mvc/decorators/class/middleware\";\nimport {IMiddleware} from \"../../mvc/interfaces/IMiddleware\";\nimport {ABORT} from \"../constants/abort\";\nimport {Context} from \"../decorators/context\";\nimport {ResponseViewMiddleware} from \"./ResponseViewMiddleware\";\n\n/**\n * Transform data to a response\n *\n * @platform\n * @middleware\n * @deprecated Will be removed in v6.\n */\n@Middleware()\nexport class PlatformResponseMiddleware implements IMiddleware {\n  @Inject()\n  mapper: ConverterService;\n\n  @Inject()\n  renderMiddleware: ResponseViewMiddleware;\n\n  public async use(@Context() ctx: Context) {\n    const {response, endpoint} = ctx;\n    let {data} = ctx;\n\n    if (endpoint.view) {\n      // TODO change this in V6.\n      data = await this.renderMiddleware.use(data, endpoint, response.raw);\n    } else if (this.shouldSerialize(data)) {\n      data = this.mapper.serialize(data, {type: endpoint.response.type, withIgnoredProps: false});\n    }\n\n    response.body(data);\n\n    return ABORT;\n  }\n\n  protected shouldSerialize(data: any) {\n    return !(this.shouldBeStreamed(data) || this.shouldBeSent(data) || data === undefined);\n  }\n\n  protected shouldBeSent(data: any) {\n    return Buffer.isBuffer(data) || isBoolean(data) || isNumber(data) || isString(data) || data === null;\n  }\n\n  protected shouldBeStreamed(data: any) {\n    return isStream(data);\n  }\n}\n"]}