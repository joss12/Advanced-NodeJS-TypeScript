{"version":3,"file":"PlatformApplication.js","sourceRoot":"","sources":["../../../src/platform/services/PlatformApplication.ts"],"names":[],"mappings":";;;;;AAAA,iCAAmD;AAEnD,mDAAoD;AACpD,qDAAgD;AAChD,uDAAkD;AAQlD;;;;GAIG;AAIH,IAAa,mBAAmB,2BAAhC,MAAa,mBAA0C,SAAQ,+BAAiB;IAC9E,YAAY,eAAgC;QAC1C,KAAK,CAAC,eAAe,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,qBAAmB,CAAC,YAAY,EAAS,CAAC,CAAC,IAAI;IAC5D,CAAC;IAES,MAAM,CAAC,YAAY;QAC3B,OAAO,mCAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,QAAgB,EAAE,OAA+B;QACvD,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACrE,CAAC;CACF,CAAA;AAbY,mBAAmB;IAH/B,eAAU,CAAC;QACV,KAAK,EAAE,kBAAa,CAAC,SAAS;KAC/B,CAAC;6CAE6B,iCAAe;GADjC,mBAAmB,CAa/B;AAbY,kDAAmB","sourcesContent":["import {Injectable, ProviderScope} from \"@tsed/di\";\nimport {PlatformStaticsOptions} from \"../../config/interfaces\";\nimport {createFakeRawDriver} from \"./FakeRawDriver\";\nimport {PlatformDriver} from \"./PlatformDriver\";\nimport {PlatformHandler} from \"./PlatformHandler\";\n\ndeclare global {\n  namespace TsED {\n    export interface Application {}\n  }\n}\n\n/**\n * `PlatformApplication` is used to provide all routes collected by annotation `@Controller`.\n *\n * @platform\n */\n@Injectable({\n  scope: ProviderScope.SINGLETON\n})\nexport class PlatformApplication<T = TsED.Application> extends PlatformDriver<T> {\n  constructor(platformHandler: PlatformHandler) {\n    super(platformHandler);\n    this.raw = PlatformApplication.createRawApp() as any; // f\n  }\n\n  protected static createRawApp(): any {\n    return createFakeRawDriver();\n  }\n\n  statics(endpoint: string, options: PlatformStaticsOptions) {\n    console.log(\"Statics methods aren't implemented on this platform\");\n  }\n}\n"]}