"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Description = void 0;
const core_1 = require("@tsed/core");
const schema_1 = require("./schema");
/**
 * Add description metadata on the decorated element.
 *
 * ::: warning
 * This decorator will be removed in v7.
 *
 * For v5 user, use @@Description@@ from @tsed/common instead of @tsed/swagger.
 *
 * For v6 user, use @@Description@@ from @tsed/schema instead of @tsed/common.
 * :::
 *
 * ## Example
 *
 * ```typescript
 * class Model {
 *    @Description("description")
 *    id: string;
 * }
 * ```
 *
 * Will produce:
 *
 * ```json
 * {
 *   "type": "object",
 *   "properties": {
 *     "id": {
 *        "type": "string",
 *        "description": "description"
 *     }
 *   }
 * }
 * ```
 *
 * @param {string} description
 * @decorator
 * @swagger
 * @schema
 */
function Description(description) {
    return (...args) => {
        const type = core_1.decoratorTypeOf(args);
        switch (type) {
            case core_1.DecoratorTypes.METHOD:
                return core_1.StoreMerge("operation", { description })(...args);
            case core_1.DecoratorTypes.PARAM:
                return core_1.StoreMerge("baseParameter", { description })(...args);
            case core_1.DecoratorTypes.CLASS:
                core_1.Store.from(...args).set("description", description);
            default:
                schema_1.Schema({ description })(...args);
        }
    };
}
exports.Description = Description;
//# sourceMappingURL=description.js.map