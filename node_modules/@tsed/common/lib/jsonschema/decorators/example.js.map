{"version":3,"file":"example.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/example.ts"],"names":[],"mappings":";;;AAAA,qCAAoE;AACpE,qCAAgC;AAchC,SAAgB,OAAO,CAAC,GAAG,IAAW;IACpC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC;IAEjC,OAAO,CAAC,GAAG,IAAW,EAAE,EAAE;QACxB,MAAM,IAAI,GAAG,sBAAe,CAAC,IAAI,CAAC,CAAC;QACnC,QAAQ,IAAI,EAAE;YACZ,KAAK,qBAAc,CAAC,KAAK;gBACvB,OAAO,eAAM,CAAC,EAAC,OAAO,EAAE,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,EAAE,WAAW,EAAC,EAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAE7F,KAAK,qBAAc,CAAC,KAAK,CAAC;YAC1B,KAAK,qBAAc,CAAC,IAAI,CAAC;YACzB,KAAK,qBAAc,CAAC,MAAM;gBACxB,OAAO,eAAM,CAAC;oBACZ,QAAQ,EAAE,cAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;iBACnD,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SACf;IACH,CAAC,CAAC;AACJ,CAAC;AAjBD,0BAiBC","sourcesContent":["import {decoratorTypeOf, DecoratorTypes, isArray} from \"@tsed/core\";\nimport {Schema} from \"./schema\";\n\n/**\n * Add a example metadata on the decorated element.\n *\n * @param {string} example\n * @decorator\n * @swagger\n * @schema\n * @methodDecorator\n * @classDecorator\n */\nexport function Example(example: any): Function;\nexport function Example(name: string | any, description: string): ClassDecorator;\nexport function Example(...args: any[]): Function {\n  const [name, description] = args;\n\n  return (...args: any[]) => {\n    const type = decoratorTypeOf(args);\n    switch (type) {\n      case DecoratorTypes.CLASS:\n        return Schema({example: typeof name === \"object\" ? name : {[name]: description}})(...args);\n\n      case DecoratorTypes.PARAM:\n      case DecoratorTypes.PROP:\n      case DecoratorTypes.METHOD:\n        return Schema({\n          examples: isArray(name) ? [name] : [].concat(name)\n        })(...args);\n    }\n  };\n}\n"]}