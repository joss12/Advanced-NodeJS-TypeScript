{"version":3,"file":"integer.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/integer.ts"],"names":[],"mappings":";;;AACA,4EAAuE;AAEvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2DG;AACH,SAAgB,OAAO;IACrB,OAAO,+CAAsB,CAAC,CAAC,MAAkB,EAAE,EAAE;QACnD,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,0BAIC","sourcesContent":["import {JsonSchema} from \"../class/JsonSchema\";\nimport {decoratorSchemaFactory} from \"../utils/decoratorSchemaFactory\";\n\n/**\n * Set integer type.\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@Integer@@ from @tsed/schema instead of @@AllowTypes@@ from @tsed/common.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @Integer()\n *    property: number;\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"integer\"\n *     }\n *   }\n * }\n * ```\n *\n * ### With array of multiple types\n *\n * ```typescript\n * class Model {\n *    @Integer()\n *    property: number[];\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"array\",\n *       \"items\": {\n *          \"type\": \"integer\"\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * @decorator\n * @validation\n * @swagger\n * @schema\n */\nexport function Integer() {\n  return decoratorSchemaFactory((schema: JsonSchema) => {\n    schema.mapper.type = \"integer\";\n  });\n}\n"]}