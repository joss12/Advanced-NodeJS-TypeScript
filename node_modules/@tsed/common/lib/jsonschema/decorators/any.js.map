{"version":3,"file":"any.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/any.ts"],"names":[],"mappings":";;;AAGA,4EAAuE;AACvE,sDAAiD;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AACH,SAAgB,GAAG,CAAC,GAAG,KAAiD;IACtE,OAAO,+CAAsB,CAAC,CAAC,MAAkB,EAAE,EAAE;QACnD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QACrG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,yBAAW,CAAU,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAQ,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC;AAND,kBAMC","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {JSONSchema6TypeName} from \"json-schema\";\nimport {JsonSchema} from \"../class/JsonSchema\";\nimport {decoratorSchemaFactory} from \"../utils/decoratorSchemaFactory\";\nimport {getJsonType} from \"../utils/getJsonType\";\n\n/**\n * Set the type of the array items.\n *\n * ::: warning\n * For v6 user, use @@Any@@ from @tsed/schema instead of @tsed/common.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @Any()\n *    property: any;\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": [\"integer\", \"number\", \"string\", \"boolean\", \"array\", \"object\", \"null\"]\n *     }\n *   }\n * }\n * ```\n *\n * @decorator\n * @validation\n * @swagger\n * @schema\n */\nexport function Any(...types: (JSONSchema6TypeName | Type<any> | null)[]) {\n  return decoratorSchemaFactory((schema: JsonSchema) => {\n    types = types.length ? types : [\"integer\", \"number\", \"string\", \"boolean\", \"array\", \"object\", \"null\"];\n    types = types.map(getJsonType) as any[];\n    schema.mapper.type = (types.length === 1 ? types[0] : types) as any;\n  });\n}\n"]}