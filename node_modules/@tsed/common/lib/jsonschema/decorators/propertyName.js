"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Name = exports.PropertyName = void 0;
const property_1 = require("./property");
/**
 * Create an alias of the propertyKey that must be used by the json mapper and json schema.
 *
 * ::: warning
 * This decorator will be removed in v6 in favor of @@Name@@ from @tsed/schema.
 * For v5 user, use @@Name@@ decorator from @tsed/common or @tsed/swagger then in v6 switch to @tsed/schema.
 * :::
 *
 * ## Example
 *
 * ```typescript
 * class Model {
 *    @Name('aliasProp')
 *    property: string[];
 * }
 * ```
 *
 * @param {string} name
 * @returns {Function}
 * @decorator
 * @jsonMapper
 * @schema
 * @property
 * @deprecated Use @Name decorator instead. Will be removed in v6.
 */
function PropertyName(name) {
    return property_1.PropertyFn((propertyMetadata) => {
        propertyMetadata.name = name;
    });
}
exports.PropertyName = PropertyName;
/**
 * Create an alias of the propertyKey that must be used by the converter.
 *
 * ::: tip
 * This decorator is used by the Converters to deserialize correctly you model.
 * :::
 *
 * ## Example
 *
 * ```typescript
 * class Model {
 *    @Name(String)
 *    property: string[];
 * }
 * ```
 *
 * @param {string} name
 * @returns {Function}
 * @decorator
 * @jsonMapper
 * @schema
 * @property
 */
function Name(name) {
    return PropertyName(name);
}
exports.Name = Name;
//# sourceMappingURL=propertyName.js.map