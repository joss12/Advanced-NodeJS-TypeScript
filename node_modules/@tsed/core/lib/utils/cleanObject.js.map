{"version":3,"file":"cleanObject.js","sourceRoot":"","sources":["../../src/utils/cleanObject.ts"],"names":[],"mappings":";;;AAAA,qDAAgD;AAChD;;;GAGG;AACH,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACtD,IAAI,+BAAc,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,GAAG,CAAC;SACZ;QAED,OAAO,KAAK,KAAK,SAAS;YACxB,CAAC,CAAC,GAAG;YACL,CAAC,CAAC;gBACE,GAAG,GAAG;gBACN,CAAC,GAAG,CAAC,EAAE,KAAK;aACb,CAAC;IACR,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAbD,kCAaC","sourcesContent":["import {isProtectedKey} from \"./isProtectedKey\";\n/**\n * Remove undefined value\n * @param obj\n */\nexport function cleanObject(obj: any): any {\n  return Object.entries(obj).reduce((obj, [key, value]) => {\n    if (isProtectedKey(key)) {\n      return obj;\n    }\n\n    return value === undefined\n      ? obj\n      : {\n          ...obj,\n          [key]: value\n        };\n  }, {});\n}\n"]}